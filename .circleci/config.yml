version: 2.1

orbs:
  node: circleci/node@5.0.2

jobs:
  deploy-to-env:
    parameters:
      target_env:
        type: string
    docker:
      - image: cimg/node:18.17
    steps:
      - checkout

      # Install Salesforce CLI
      - run:
          name: Install Salesforce CLI
          command: |
            sudo npm install -g @salesforce/cli
            echo 'export PATH=$(npm bin -g):$PATH' >> "$BASH_ENV"
            source "$BASH_ENV"
            sf --version
            sf plugins --core

      # ðŸ”¹ Git Tag Logic: Find the latest tag
      - run:
          name: Find Most Recent Tag
          command: |
            currentRef=0
            for tag in $(git describe --tags --match='PROD-[0-9]*' --abbrev=0 --always); do
              refNum=$(echo $tag | cut -d '-' -f 2)
              if test $refNum -gt $currentRef; then
                currentRef=$refNum
                currentTag=$tag
              fi
            done
            echo "Latest Tag: $currentTag"
            echo "export CURRENT_REF=$currentRef" >> $BASH_ENV
            echo "export CURRENT_TAG=$currentTag" >> $BASH_ENV

      # ðŸ”¹ Build Manifest from changes since last tag
      - run:
          name: Build the Package Manifest
          command: |
            source "$BASH_ENV"
            cd force-app
      
            # Check if previous tag exists
            if git rev-parse "$CURRENT_TAG" >/dev/null 2>&1; then
              echo "Found previous tag: $CURRENT_TAG"
              FILES=$(git diff --name-only $CURRENT_TAG HEAD)
            else
              echo "No previous tag found. Using initial commit."
              FILES=$(git diff --name-only $(git rev-list --max-parents=0 HEAD) HEAD)
            fi
      
            if test -n "$FILES"; then
              sf project generate manifest -p $FILES
            else
              echo "No new commits to deploy."
              exit 1
            fi



      # ðŸ”¹ Deploy changes only if package.xml exists
      - run:
          name: Push Source
          command: |
            if test -f package.xml; then
              sf project deploy start -w 360 -x package.xml -l RunLocalTests -o ${SF_USERNAME_<< parameters.target_env >>}
            else
              echo "No Package Found!"
              exit 1
            fi

      # ðŸ”¹ Tag new deployment
      - run:
          name: Set New Tag
          command: |
            source "$BASH_ENV"
            git config user.email "ci-bot@example.com"
            git config user.name "CI Bot"
            git tag "PROD-$(( CURRENT_REF + 1 ))"
            git push origin "PROD-$(( CURRENT_REF + 1 ))"

workflows:
  deploy-qa:
    jobs:
      - deploy-to-env:
          name: Deploy to QA
          target_env: "QA"
          filters:
            branches:
              only: qa
  deploy-uat:
    jobs:
      - deploy-to-env:
          name: Deploy to UAT
          target_env: "UAT"
          filters:
            branches:
              only: uat
  deploy-prod:
    jobs:
      - deploy-to-env:
          name: Deploy to Prod
          target_env: "PROD"
          filters:
            branches:
              only: main
