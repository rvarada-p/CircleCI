version: 2.1

orbs:
  node: circleci/node@5.0.2

jobs:
  deploy-to-env:
    parameters:
      target_env:
        type: string
    docker:
      - image: cimg/node:18.17
    steps:
      - checkout

      # Install Salesforce CLI
      - run:
          name: Install Salesforce CLI
          command: |
            sudo npm install -g @salesforce/cli
            echo 'export PATH=$(npm bin -g):$PATH' >> "$BASH_ENV"
            source "$BASH_ENV"
            sf --version
            sf plugins --core

      - run:
          name: Install Salesforce Code Analyzer
          command: |
            source "$BASH_ENV"
            sf plugins install @salesforce/sfdx-scanner
            # verify plugin is installed
            sf plugins
      
      - run:
          name: Run Code Quality Check
          command: |
            source "$BASH_ENV"
            sf scanner run \
              --target "force-app" \
              --format table \
              --engine pmd,eslint \
              --normalize-severity
        
      # Prepare JWT key (supports either raw or base64 env var)
      - run:
          name: Prepare JWT key
          command: |
            echo "$JWT_KEY_B64" | base64 -d > server.key
            chmod 600 server.key
            openssl rsa -in server.key -check -noout

      - run:
          name: JWT Auth
          command: |
            source "$BASH_ENV"
            sf org login jwt \
              --username "${SF_USERNAME_<< parameters.target_env >>}" \
              --jwt-key-file server.key \
              --client-id "${SF_CONSUMER_KEY_<< parameters.target_env >>}" \
              --instance-url "${SF_INSTANCEURL_<< parameters.target_env >>}"

      - run:
          name: Deploy to Salesforce
          command: |
            source "$BASH_ENV"
            sf project deploy start --target-org "${SF_USERNAME_<< parameters.target_env >>}"


workflows:
  deploy-qa:
    jobs:
      - deploy-to-env:
          name: Deploy to QA
          target_env: "QA"
          filters:
            branches:
              only: qa

  deploy-uat:
    jobs:
      - deploy-to-env:
          name: Deploy to UAT
          target_env: "UAT"
          filters:
            branches:
              only: uat

  deploy-prod:
    jobs:
      - deploy-to-env:
          name: Deploy to Prod
          target_env: "PROD"
          filters:
            branches:
              only: main
