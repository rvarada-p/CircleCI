jobs:
  deploy-to-env:
    parameters:
      target_env:
        type: string
    docker:
      - image: cimg/node:18.17
    steps:
      - checkout

      # Install Salesforce CLI
      - run:
          name: Install Salesforce CLI
          command: |
            sudo npm install -g @salesforce/cli
            echo 'export PATH=$(npm bin -g):$PATH' >> "$BASH_ENV"
            source "$BASH_ENV"
            sf --version

      # Install Java (needed for PMD in Code Analyzer)
      - run:
          name: Install Java
          command: |
            sudo apt-get update
            sudo apt-get install -y openjdk-17-jdk
            export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
            echo "export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $BASH_ENV

      # Install Code Analyzer
      - run:
          name: Install Salesforce Code Analyzer
          command: |
            source "$BASH_ENV"
            sf plugins install @salesforce/sfdx-scanner

      # Run Code Quality Check
      - run:
          name: Run Code Quality Check
          command: |
            source "$BASH_ENV"
            sf scanner run \
              --target "force-app" \
              --format table \
              --engine pmd,eslint \
              --normalize-severity

      # Find the Most Recent Tag
      - run:
          name: Find Most Recent Tag
          command: |
            currentRef=0
            for tag in $(git describe --tags --match='INTQA-[0-9]*' --abbrev=0 2>/dev/null || true); do
              refNum=$(echo $tag | cut -d '-' -f 2)
              if test $refNum -gt $currentRef; then
                currentRef=$refNum
                currentTag=$tag
              fi
            done
            echo "Found latest tag: $currentTag"
            echo "export CURRENT_REF=$currentRef" >> $BASH_ENV

      # Build the Package Manifest (delta)
      - run:
          name: Build Package Manifest
          command: |
            source "$BASH_ENV"
            oldIFS="$IFS"
            IFS=$'\n'
            FILES=$(git diff --name-only INTQA-$CURRENT_REF HEAD | cut -b 9-)
            if test -n "$FILES"; then
              sf project generate manifest -p $FILES
            else
              echo "There are no new commits to deploy to INTQA."
              exit 0
            fi
            IFS=$oldIFS

      # Deploy Only Changed Metadata
      - run:
          name: Push Source (Delta Deploy)
          command: |
            source "$BASH_ENV"
            if test -f package.xml; then
              sf project deploy start -w 360 -x package.xml -l RunLocalTests -o "${SF_USERNAME_<< parameters.target_env >>}"
            else
              echo "No Package Found!"
              exit 1
            fi

      # Set New Tag
      - run:
          name: Set New Tag
          command: |
            source "$BASH_ENV"
            git config user.email "ci-bot@example.com"
            git config user.name "CircleCI Bot"
            newTag="INTQA-$(( CURRENT_REF + 1 ))"
            git tag $newTag
            git push origin $newTag



workflows:
  deploy-qa:
    jobs:
      - deploy-to-env:
          name: Deploy to QA
          target_env: "QA"
          filters:
            branches:
              only: qa

  deploy-uat:
    jobs:
      - deploy-to-env:
          name: Deploy to UAT
          target_env: "UAT"
          filters:
            branches:
              only: uat

  deploy-prod:
    jobs:
      - deploy-to-env:
          name: Deploy to Prod
          target_env: "PROD"
          filters:
            branches:
              only: main
